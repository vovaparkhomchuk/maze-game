{"version":3,"sources":["reducers/mazeReducer.js","AppMethods.js","Components/Arrows/Arrows.js","Components/Square/Square.js","Components/Line/Line.js","App.js","index.js"],"names":["initialState","maze","arrows","finish","setWin","type","directions","Arrows","dirs","styles","arrowsContainer","margin","width","arrowsStyles","color","justifyContent","float","borderRadius","background","boxShadow","height","display","alignItems","fontSize","style","map","dir","Square","checkFinish","value","x","y","useState","win","squareStyles","cursor","onClick","check","Line","mazeArray","ind","el","i","App","appState","useSelector","state","dispatch","useDispatch","start","setStart","mazeLen","mainContainer","flexDirection","textAlign","backgroundColor","playBtn","padding","fontFamily","fontWeight","marginTop","mainText","winContainer","position","backdropFilter","instructions","StartScreen","WinScreen","newGame","Instructions","mazeArrStart","len","arr","push","Array","fill","createArray","Math","floor","random","lastPos","lastPosition","length","randDirNum","direction","chooseDirections","mazeAction","arrowsAction","coordinates","useEffect","key","lastState","winAction","isWin","store","createStore","action","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.171d1ea6.chunk.js","sourcesContent":["const initialState = {\n  maze: [],\n  arrows: [],\n  finish: {},\n};\n\nconst SET_MAZE = `SET_MAZE`;\nconst SET_ARROWS = `SET_ARROWS`;\nconst SET_FINISH = `SET_FINISH`;\nconst SET_INITIAL = `SET_INITIAL`;\nconst SET_WIN = `SET_WIN`;\n\nexport const setMaze = (arr) => ({ type: SET_MAZE, arr });\nexport const setDirections = (arr) => ({ type: SET_ARROWS, arr });\nexport const setFinish = (coordinates) => ({ type: SET_FINISH, coordinates });\nexport const setWin = () => ({ type: SET_WIN });\nexport const setInitial = () => ({ type: SET_INITIAL });\n\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_MAZE:\n      return {\n        ...state,\n        maze: action.arr,\n      };\n    case SET_ARROWS:\n      return {\n        ...state,\n        arrows: action.arr,\n      };\n    case SET_FINISH:\n      return {\n        ...state,\n        finish: action.coordinates,\n      };\n    case SET_WIN:\n      return {\n        ...state,\n        win: true,\n      };\n    case SET_INITIAL:\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n}\n","const directions = [\"up\", \"right\", \"down\", \"left\"];\n\nexport const rand = (len) => {\n  return [Math.floor(Math.random() * len), Math.floor(Math.random() * len)];\n};\n\nexport const createArray = (len) => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(new Array(len).fill(0));\n  }\n  return arr;\n};\n\nexport const chooseDirections = (lastPosition, mazeLen) => {\n  const dirs = [];\n\n  while (dirs.length < 10) {\n    const randDirNum = Math.floor(Math.random() * directions.length);\n    const direction = directions[randDirNum];\n\n    if (direction === \"up\") {\n      if (lastPosition.y > 0) {\n        lastPosition.y = lastPosition.y - 1;\n        dirs.push(\"â¬†\");\n      }\n    }\n\n    if (direction === \"right\") {\n      if (lastPosition.x < mazeLen - 1) {\n        lastPosition.x = lastPosition.x + 1;\n        dirs.push(\"âž¡\");\n      }\n    }\n\n    if (direction === \"down\") {\n      if (lastPosition.y < mazeLen - 1) {\n        lastPosition.y = lastPosition.y + 1;\n        dirs.push(\"â¬‡\");\n      }\n    }\n\n    if (direction === \"left\") {\n      if (lastPosition.x > 0) {\n        lastPosition.x = lastPosition.x - 1;\n        dirs.push(\"â¬…\");\n      }\n    }\n  }\n  return dirs;\n};\n","import React from \"react\";\n\nconst Arrows = ({ dirs }) => {\n  const styles = {\n    arrowsContainer: {\n      margin: \"10px\",\n      width: \"350px\",\n    },\n    arrowsStyles: {\n      color: \"white\",\n      margin: \"10px\",\n      justifyContent: \"center\",\n      float: \"left\",\n      borderRadius: \"6px\",\n      background: \"linear-gradient(145deg, #e63ae6, #ff44ff)\",\n      boxShadow: \"5px 5px 10px #d936d9 -5px -5px 10px #ff4aff\",\n      width: \"50px\",\n      height: \"50px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      fontSize: 22,\n    },\n  };\n\n  return (\n    <div style={styles.arrowsContainer}>\n      {dirs.map((dir) => (\n        <span style={styles.arrowsStyles}>{dir}</span>\n      ))}\n    </div>\n  );\n};\n\nexport default Arrows;\n","import React, { useState } from \"react\";\n\nconst Square = ({ checkFinish, value, x, y }) => {\n  const [win, setWin] = useState(false);\n\n  const styles = {\n    squareStyles: {\n      width: \"50px\",\n      height: \"50px\",\n      justifyContent: \"center\",\n      float: \"left\",\n      cursor: \"pointer\",\n      margin: \"10px\",\n      borderRadius: \"6px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      background:\n        value === 1\n          ? \"linear-gradient(145deg, #ff44ff, #e63ae6)\"\n          : \"linear-gradient(145deg, #e63ae6, #ff44ff)\",\n      boxShadow: \"5px 5px 10px #d936d9 -5px -5px 10px #ff4aff\",\n      fontSize: 22,\n    },\n  };\n\n  const check = (x, y) => {\n    const res = checkFinish(x, y);\n    if (res) setWin(true);\n  };\n\n  return (\n    <span onClick={() => check(x, y)} x={x} y={y} style={styles.squareStyles}>\n      {win === false ? (value === 1 ? \"ðŸŒ€\" : null) : \"âœ…\"}\n    </span>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"../Square\";\n\nconst Line = ({ checkFinish, mazeArray, ind }) => {\n  return mazeArray.map((el, i) => (\n    <Square checkFinish={checkFinish} value={el} x={i} y={ind} />\n  ));\n};\n\nexport default Line;\n","import { rand, createArray, chooseDirections } from \"./AppMethods.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useState, useEffect } from \"react\";\nimport Arrows from \"./Components/Arrows\";\nimport Line from \"./Components/Line\";\nimport {\n  setMaze as mazeAction,\n  setDirections as arrowsAction,\n  setFinish as finishAction,\n  setWin as winAction,\n  setInitial as initialAction,\n} from \"./reducers/mazeReducer.js\";\n\nfunction App() {\n  const appState = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const [start, setStart] = useState(true);\n  const [mazeLen, setMazeLen] = useState(3);\n\n  const styles = {\n    mainContainer: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      textAlign: \"center\",\n      backgroundColor: \"#ff40ff\",\n      height: \"100vh\",\n    },\n    maze: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: mazeLen * 70,\n    },\n    playBtn: {\n      borderRadius: \"6px\",\n      background: \"linear-gradient(145deg, #e63ae6, #ff44ff)\",\n      boxShadow: \"5px 5px 10px #d936d9 -5px -5px 10px #ff4aff\",\n      padding: \"15px 0px\",\n      fontSize: 22,\n      color: \"white\",\n      fontFamily: \"SF Pro Rounded\",\n      fontWeight: \"600\",\n      marginTop: 20,\n      cursor: \"pointer\",\n      width: 226,\n    },\n    mainText: {\n      color: \"white\",\n      fontFamily: \"SF Pro Rounded\",\n      fontSize: 48,\n      fontWeight: \"bold\",\n      width: 226,\n    },\n    winContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      backgroundColor: \"rgba(0,0,0,0.2)\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      height: \"100vh\",\n      position: \"absolute\",\n      alignItems: \"center\",\n      backdropFilter: \"blur(4px)\",\n    },\n    instructions: {\n      fontSize: 22,\n      fontWeight: 600,\n      fontFamily: \"SF Pro Rounded\",\n    },\n  };\n\n  const StartScreen = () => {\n    return (\n      <>\n        <span style={styles.mainText}>Let's play!</span>\n        <span style={styles.playBtn} onClick={() => setStart(false)}>\n          START\n        </span>\n      </>\n    );\n  };\n\n  const WinScreen = () => {\n    return (\n      <div style={styles.winContainer}>\n        <span style={styles.mainText}>You win!</span>\n        <div style={styles.playBtn} onClick={newGame}>\n          New Game\n        </div>\n      </div>\n    );\n  };\n\n  const Instructions = () => {\n    return (\n      <>\n        <span style={styles.instructions}>ðŸŒ€ - is your start point.</span>\n        <span style={styles.instructions}>Find your way out. Good luck!</span>\n      </>\n    );\n  };\n\n  const checkFinish = (x, y) => {\n    if (appState.finish.x === x && appState.finish.y === y) {\n      dispatch(winAction());\n      return true;\n    }\n  };\n\n  const newGame = () => {\n    dispatch(initialAction());\n    setStart(true);\n    mazeArrStart();\n  };\n\n  const mazeArrStart = () => {\n    const arr = createArray(mazeLen);\n    const [x, y] = rand(mazeLen);\n    const lastPos = { x, y };\n    const dirs = chooseDirections(lastPos, mazeLen);\n\n    arr[y][x] = 1;\n    dispatch(mazeAction(arr));\n    dispatch(arrowsAction(dirs));\n    dispatch(finishAction(lastPos));\n  };\n\n  useEffect(() => {\n    mazeArrStart();\n  }, []);\n\n  return (\n    <div style={styles.mainContainer}>\n      {start === true ? (\n        <StartScreen />\n      ) : (\n        <>\n          {appState.win ? <WinScreen /> : null}\n          <Instructions />\n          <div style={{ margin: \"20px\" }}>\n            {appState.maze.map((el, i) => (\n              <div key={i} style={styles.maze}>\n                <Line\n                  checkFinish={checkFinish}\n                  mazeArray={el}\n                  ind={i}\n                  lastState={appState.finish}\n                  winAction={winAction}\n                  isWin={appState.win}\n                />\n              </div>\n            ))}\n          </div>\n          <Arrows dirs={appState.arrows} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { reducer as mazeReducer } from \"./reducers/mazeReducer.js\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst store = { maze: createStore(mazeReducer) };\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <Provider store={store.maze}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}